
buildscript {
  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:4.2.1'
  }
}
plugins {
  id("com.github.sherter.google-java-format").version("0.9")
}

apply plugin: 'com.android.library'

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

def DEFAULT_COMPILE_SDK_VERSION = 30
def DEFAULT_BUILD_TOOLS_VERSION = "30.0.2"
def DEFAULT_MIN_SDK_VERSION = 16
def DEFAULT_TARGET_SDK_VERSION = 30
def DEFAULT_PLAY_SERVICES_VERSION = "17.6.0"

android {
  compileSdkVersion safeExtGet("compileSdkVersion", DEFAULT_COMPILE_SDK_VERSION)

  defaultConfig {
    minSdkVersion safeExtGet('minSdkVersion', DEFAULT_MIN_SDK_VERSION)
    targetSdkVersion safeExtGet('targetSdkVersion', DEFAULT_TARGET_SDK_VERSION)
    versionCode 3
    versionName "3.0.0"
  }
  lintOptions {
    abortOnError false
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  flavorDimensions "store"
  productFlavors {
    amazon{
      dimension "store"
    }
    play{
      dimension "store"
    }
  }
}

repositories {
  google()
  mavenCentral()
}

dependencies {
  implementation 'com.facebook.react:react-native:+'
  playImplementation 'com.android.billingclient:billing:4.0.0'
  def playServicesVersion = safeExtGet('playServicesVersion', DEFAULT_PLAY_SERVICES_VERSION)
  playImplementation "com.google.android.gms:play-services-base:$playServicesVersion"
  amazonImplementation fileTree(dir: 'libs', include: ['*.jar'])

  def supportLibVersion = safeExtGet('supportLibVersion', safeExtGet('supportVersion', null))
  def androidXVersion = safeExtGet('androidXVersion', null)
  if (supportLibVersion && androidXVersion == null) {
    implementation "com.android.support:support-annotations:$supportLibVersion"
    implementation "com.android.support:customtabs:$supportLibVersion"
  } else {
    def defaultAndroidXVersion = "1.+"
    if (androidXVersion == null) {
      androidXVersion = defaultAndroidXVersion
    }
    def androidXAnnotation = safeExtGet('androidXAnnotation', androidXVersion)
    def androidXBrowser = safeExtGet('androidXBrowser', androidXVersion)
    implementation "androidx.annotation:annotation:$androidXAnnotation"
    implementation "androidx.browser:browser:$androidXBrowser"
  }
}
